// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using services;

#nullable disable

namespace services.Migrations
{
    [DbContext(typeof(DBConnection))]
    [Migration("20250508114700_add other_contact")]
    partial class addother_contact
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("model.Activities.TblActivityMaster", b =>
                {
                    b.Property<int>("AmActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AmActivityId"));

                    b.Property<string>("AmActivityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AmActivityId");

                    b.ToTable("activityMaster");
                });

            modelBuilder.Entity("model.Institution.TblInstitutionActivity", b =>
                {
                    b.Property<int>("ImInstitutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImInstitutionId"));

                    b.Property<int>("ImActivityId")
                        .HasColumnType("int");

                    b.Property<string>("ImAssignConnector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImCreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ImCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImInstitutionAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImInstitutionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ImInstitutionStatus")
                        .HasColumnType("bit");

                    b.Property<string>("ImInstitutionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImMouStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImOtherDesignation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImOtherEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImOtherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImPrincipalContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImPrincipalEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImPrincipalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImStudentStrength")
                        .HasColumnType("int");

                    b.Property<int?>("ImUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ImUpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ImInstitutionId");

                    b.ToTable("institutionActivity");
                });

            modelBuilder.Entity("model.Institution.TblInstitutionMaster", b =>
                {
                    b.Property<int>("ImInstitutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImInstitutionId"));

                    b.Property<string>("ImAssignConnector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImCreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ImCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImInstitutionAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImInstitutionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ImInstitutionStatus")
                        .HasColumnType("bit");

                    b.Property<string>("ImInstitutionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ImIsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ImMouStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImOtherContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImOtherDesignation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImOtherEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImOtherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImPrincipalContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImPrincipalEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImPrincipalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImStudentStrength")
                        .HasColumnType("int");

                    b.Property<int?>("ImUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ImUpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ImInstitutionId");

                    b.ToTable("institutionMaster");
                });

            modelBuilder.Entity("model.Institution.TblMeetingsMaster", b =>
                {
                    b.Property<int>("MmMeetingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MmMeetingId"));

                    b.Property<int>("MmCreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MmCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MmInstitutionAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MmInstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("MmInstitutionResponded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MmMeetingConducted")
                        .HasColumnType("bit");

                    b.Property<string>("MmMeetingDescritpion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MmMeetingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("MmMeetingTime")
                        .HasColumnType("time");

                    b.Property<string>("MmMeetingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MmUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("MmUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MmmeetingOutcome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MmMeetingId");

                    b.ToTable("meetingsMaster");
                });

            modelBuilder.Entity("model.MOUs.ConnectorMou", b =>
                {
                    b.Property<int>("CmouMouNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CmouMouNo"));

                    b.Property<int>("CmouCreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CmouCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CmouMouDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CmouMouId")
                        .HasColumnType("int");

                    b.Property<string>("CmouMouPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("CmouMouVerionNo")
                        .HasColumnType("real");

                    b.Property<int?>("CmouRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("CmouUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CmouUpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CmouMouNo");

                    b.ToTable("connectorMou");
                });

            modelBuilder.Entity("model.MOUs.InstitutionMou", b =>
                {
                    b.Property<int>("ImoMouNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImoMouNo"));

                    b.Property<int?>("ImoCreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ImoCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImoDownloadedMou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImoInstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("ImoMouDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImoMouId")
                        .HasColumnType("int");

                    b.Property<string>("ImoMouPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ImoMouVerionNo")
                        .HasColumnType("real");

                    b.Property<int?>("ImoUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ImoUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImoUploadedMou")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImoMouNo");

                    b.ToTable("institutionMou");
                });

            modelBuilder.Entity("model.MOUs.MouMaster", b =>
                {
                    b.Property<int>("MoumMouId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MoumMouId"));

                    b.Property<int>("MoumCreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("MoumCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MoumMouDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoumMouName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoumMouPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MoumUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MoumUpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MoumMouId");

                    b.ToTable("mouMaster");
                });

            modelBuilder.Entity("model.User.tbl_employee_master", b =>
                {
                    b.Property<int>("em_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("em_id"));

                    b.Property<DateOnly>("dob")
                        .HasColumnType("date");

                    b.Property<string>("em_contact_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("em_created_by")
                        .HasColumnType("int");

                    b.Property<DateTime?>("em_created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("em_email_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("em_end_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("em_gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("em_is_active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("em_joining_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("em_name_e")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("em_name_k")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("em_residencial_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("em_role_id")
                        .HasColumnType("int");

                    b.Property<int?>("em_updated_by")
                        .HasColumnType("int");

                    b.Property<DateTime?>("em_updated_date")
                        .HasColumnType("datetime2");

                    b.HasKey("em_id");

                    b.ToTable("tbl_employee_master");
                });

            modelBuilder.Entity("model.User.tbl_role_master", b =>
                {
                    b.Property<int>("rm_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rm_id"));

                    b.Property<int?>("rm_created_by")
                        .HasColumnType("int");

                    b.Property<DateTime?>("rm_created_date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("rm_is_active")
                        .HasColumnType("bit");

                    b.Property<string>("rm_name_e")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rm_name_k")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("rm_updated_by")
                        .HasColumnType("int");

                    b.Property<DateTime?>("rm_updated_date")
                        .HasColumnType("datetime2");

                    b.HasKey("rm_id");

                    b.ToTable("tbl_role_master");
                });

            modelBuilder.Entity("model.User.tbl_user_login_details", b =>
                {
                    b.Property<int>("uld_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("uld_id"));

                    b.Property<string>("uld_contact_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("uld_created_by")
                        .HasColumnType("int");

                    b.Property<DateTime?>("uld_created_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("uld_employee_id")
                        .HasColumnType("int");

                    b.Property<bool?>("uld_is_active")
                        .HasColumnType("bit");

                    b.Property<string>("uld_otp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("uld_otp_time")
                        .HasColumnType("datetime2");

                    b.Property<string>("uld_password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("uld_updated_by")
                        .HasColumnType("int");

                    b.Property<DateTime?>("uld_updated_date")
                        .HasColumnType("datetime2");

                    b.HasKey("uld_id");

                    b.ToTable("tbl_user_login_details");
                });
#pragma warning restore 612, 618
        }
    }
}
